name: Api-client Package

on:
  push:
    branches: ['staging/api-client', 'dist/api-client']

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          scope: '@leilen'

      - name: get branch
        id: get_branch
        shell: bash
        run: |
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

      - name: get hash
        id: get_hash
        run: |
          if [[ "${{ steps.get_branch.outputs.branch }}" == "staging/api-client" ]]; then
            echo "hash=-$(echo $GITHUB_SHA | cut -c1-5)" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ steps.get_branch.outputs.branch }}" == "dist/api-client" ]]; then
            echo "hash=" >> $GITHUB_OUTPUT
          fi

      - name: get version
        id: get_version
        shell: bash
        run: echo "version=$(cat ./package.json | jq '.version' | tr -d '\"')" >> $GITHUB_OUTPUT

      - name: print
        run: |
          echo "Branch: ${{ steps.get_branch.outputs.branch }}"
          echo "Sha: ${{ steps.get_hash.outputs.hash }}"
          echo "Version: ${{ steps.get_version.outputs.version}}"
          echo "Publishing version: ${{ steps.get_version.outputs.version}}${{ steps.get_hash.outputs.hash }}"

      - name: replace version
        if: steps.get_branch.outputs.branch == 'staging/api-client'
        shell: bash
        run: |
          jq -c '.version = "${{ steps.get_version.outputs.version }}${{ steps.get_hash.outputs.hash }}"' ./package.json > tmp.$$.json && mv tmp.$$.json test.json

      - name: show publishing version
        shell: bash
        run: echo "publishing version=$(cat ./package.json | jq '.version' | tr -d '\"')"

      - run:
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GITHUB_TOKEN }}" >
          ~/.npmrc

      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
